<section class="row">
  <article class="column">

<div style="display:flex; justify-content: space-between">
    <%= for {player, opponent} <- [{:john, :simon}, {:simon, :john}] do %>
      <div style="width:100%; margin: 10px; border: 1px black">
        <%# TODO: refactor into a player component %>
        <h1> Hey <%= uppercase(player) %> </h1>
        <%= if (get_in(@player_states,[player, :isMyTurn])) do%>
            <br/>
            <button style="background-color:red;" >
            <%=link("Draw Card", to: "draw_card/#{player}", method: :put) %> 
            </button>
            <%# TODO remove this draw card button, since it shouldn't be allowed to use it %>
            <br/>
            <form action="/ask_for_card" method="get" >
              <input type="hidden" name="taker" value={player}>
              <input type="hidden" name="giver" value={opponent}>
              <div style="border:1px solid; border-radius:10px; padding: 15px 10px 0">
                <div style="display:flex; align-content:center ">
                  Ask  
                  <%# TODO: capitalize first letter of name %>
                  <%= uppercase(opponent) %> for all his cards of rank:
                  <input type="number" name="value" max="14" min="2" style="margin-left: 5px; width:80px">
                </div>
                <input type="submit" value="Ask" style="margin-left: 10px">
              </div>
            </form>
          <% else %>
        <% end %>
        
        

        <br/>
        Cards in your hand: <br/>
        <div style="display:flex">
          <%= for card <- get_in(@player_states, [player, :hand])
                          |> Enum.sort(&(&1.value >= &2.value)) # Sort by value 
                          do %> 
            <div class="playing-card">
              <div style="display:flex; flex-direction: column; align-items: center; width: 25px">
                <span style={"line-height:1; font-weight:500; color:" <> suit_to_color(card.suit)} > <%= card.value %> </span>
                <br/>
                <%= suit_to_emoji(card.suit) %> 
              </div>
            </div>
            <%# TODO: make card component to display them nicely %>
          <% end %>
        </div>
        <br/>

        Books: <br/>
        <%= for book <- get_in(@player_states, [player, :books]) do %>
          <%= book %>'s
        <% end %>
      </div>
    <% end %>
    </div>
    
  </article>
</section>
